RVM_PROMPT_OPTIONS="gemset"
function rvm_prompt_info() {
  [ -f $HOME/.rvm/bin/rvm-prompt ] || return
  print -Pn $($HOME/.rvm/bin/rvm-prompt ${RVM_PROMPT_OPTIONS} 2>/dev/null)
}

PROJECT_HOME="$HOME/Projects"
PROJECT_FORMAT="\\1"
HOME_FORMAT="~"
function formatted_path() {
  print -n $PWD|sed -e "s-$PROJECT_HOME/\([^\/]*\)-$PROJECT_FORMAT-" -e "s-$HOME-$HOME_FORMAT-"
}

function job_prompt_info() {
  [[ $(jobs -l | wc -l) -gt 0 ]] && print -n "⚙"
}

VI_PROMPT_INFO=""
function vi_prompt_info() {
  print -Pn $VI_PROMPT_INFO
}

function zle-keymap-select {
  VI_PROMPT_INFO="${${KEYMAP/vicmd/ ☰}/(main|viins)/}"
  zle reset-prompt
}

zle -N zle-keymap-select

#usage: title short_tab_title looooooooooooooooooooooggggggg_windows_title
#http://www.faqs.org/docs/Linux-mini/Xterm-Title.html#ss3.1
#Fully support screen, iterm, and probably most modern xterm and rxvt
#Limited support for Apple Terminal (Terminal can't set window or tab separately)
#Shameless taken from: https://github.com/robbyrussell/oh-my-zsh
function title {
  if [[ "$DISABLE_AUTO_TITLE" == "true" ]] || [[ "$EMACS" == *term* ]]; then
    return
  fi
  if [[ "$TERM" == screen* ]]; then
    print -Pn "\ek$1:q\e\\" #set screen hardstatus, usually truncated at 20 chars
  elif [[ "$TERM" == xterm* ]] || [[ $TERM == rxvt* ]] || [[ "$TERM_PROGRAM" == "iTerm.app" ]]; then
    print -Pn "\e]2;$2:q\a" #set window name
    print -Pn "\e]1;$1:q\a" #set icon (=tab) name (will override window name on broken terminal)
  fi
}

ZSH_THEME_TERM_TAB_TITLE_IDLE="%15<..<%~%<<" #15 char left truncated PWD
ZSH_THEME_TERM_TITLE_IDLE="%n@%m: %~"

#Appears when you have the prompt
function omz_termsupport_precmd {
  title $ZSH_THEME_TERM_TAB_TITLE_IDLE $ZSH_THEME_TERM_TITLE_IDLE
}

#Appears at the beginning of (and during) of command execution
function omz_termsupport_preexec {
  emulate -L zsh
  setopt extended_glob
  local CMD=${1[(wr)^(*=*|sudo|ssh|rake|-*)]} #cmd name only, or if this is sudo or ssh, the next cmd
  title "$CMD" "%100>...>${2:gs/%/%%}%<<"
}

autoload -U add-zsh-hook
add-zsh-hook precmd  omz_termsupport_precmd
add-zsh-hook preexec omz_termsupport_preexec
