[alias]
  st = status
  ci = commit
  cia = commit -a
  cp = cherry-pick
  br = branch
  co = checkout
  ls = ls-files
  gr = grep -n
  brt = branch-time
  who = shortlog -s -n --no-merges
  up = !git fetch origin && git rebase -p origin/$(git current-branch)
# Log Aliases
  l = log --graph --pretty=format':%C(bold yellow)%h%C(bold blue)%d%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  ll = log --numstat --graph --pretty=format':%C(bold yellow)%h%C(bold blue)%d%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  lg = log -p
  lol = log --pretty=oneline --abbrev-commit --graph --decorate
# Other useful aliases:
  unstage = reset HEAD
  staged = diff --cached
  unstaged = diff
  current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
  # Usage: git track origin/feature-123-login-form
  track = checkout -t
[apply]
  whitespace = warn
[format]
	pretty = %C(yellow)%h%Creset %s %C(red)(%an, %cr)%Creset
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = cyan
[color "diff"]
  meta = black white
  frag = blue
  old = red
  new = green
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = red
[color "interactive"]
  prompt = cyan bold
  header = yellow
  help = yellow
  error = red bold
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	editor = vim
[help]
  autocorrect = 1
[status]
  submodule = 1
[push]
  # Only push branches that have been set up to track a remote branch.
  default = current
[user]
	name = <%= print("Your Name: "); STDOUT.flush; STDIN.gets.chomp %>
	email = <%= print("Your Email: "); STDOUT.flush; STDIN.gets.chomp %>
[credential]
  helper = osxkeychain