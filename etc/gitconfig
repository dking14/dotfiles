[alias]
  st = status
  ci = commit
  cia = commit -a
  pick = cherry-pick
  br = branch
  co = checkout
  ls = ls-files
  gr = grep -n
  sm = submodule
  brt = branch-time
  who = shortlog -sne --no-merges
  rb = rebase -p
  fa = fetch --all
  up = !sh -c 'echo "Rebasing on ${1:-origin}\n" git fetch ${1:-origin} && git rebase -p ${1:-origin}/$(git current-branch)' -
  current-branch = rev-parse --abbrev-ref HEAD
  l = log --graph --pretty=format':%C(bold yellow)%h%C(bold blue)%d%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  ll = log --numstat --graph --pretty=format':%C(bold yellow)%h%C(bold blue)%d%Creset %s %C(white) %C(bold white)%an, %C(bold black)%ar%Creset'
  lg = log -p
  unstage = reset HEAD
  staged = diff --cached
  unstaged = diff
  track = checkout -t
  assume   = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed  = "!git ls-files -v | grep ^h | cut -c 3-"
  snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  ours   = "!f() { git checkout --ours $@ && git add $@; }; f"
  theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
[apply]
  whitespace = warn
[format]
	pretty = %C(yellow)%h%Creset %s %C(red)(%an, %cr)%Creset
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = cyan
[color "diff"]
  meta = black white
  frag = blue
  old = red
  new = green
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = red
[color "interactive"]
  prompt = cyan bold
  header = yellow
  help = yellow
  error = red bold
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	editor = vim
[help]
  autocorrect = 1
[status]
  submodule = 1
[push]
  # Only push branches that have been set up to track a remote branch.
  default = current
[user]
	name = robhurring
	email = robhurring@gmail.com
[mailmap]
  file = $HOME/.mailmap
[credential]
  helper = osxkeychain